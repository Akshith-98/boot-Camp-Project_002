{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_bronze_products",
						"type": "DatasetReference"
					},
					"name": "Products"
				},
				{
					"dataset": {
						"referenceName": "ds_bronze_customers",
						"type": "DatasetReference"
					},
					"name": "Customers"
				},
				{
					"dataset": {
						"referenceName": "ds_bronze_sales",
						"type": "DatasetReference"
					},
					"name": "Sales"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string,",
				"          StockQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Products",
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string,",
				"          StockQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customers",
				"source(output(",
				"          CustomerID as integer,",
				"          ProductID as integer,",
				"          Quantity as integer,",
				"          SaleDate as date,",
				"          SaleID as integer,",
				"          TotalAmount as integer,",
				"          amount as integer,",
				"          category as integer,",
				"          date as date,",
				"          id as integer,",
				"          value1 as integer,",
				"          value2 as integer,",
				"          value3 as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Sales",
				"Sales derive({Final Quantity} = iif(!isNull(Quantity), Quantity, \r",
				"    iif(!isNull(value3),value3, \r",
				"        iif(!isNull(category), category, 0)))\r",
				",",
				"          {Final Customer Id} = iif(!isNull(CustomerID),CustomerID, iif(!isNull(value1), value1,0)),",
				"          {Final SaleID} = iif(!isNull(SaleID), SaleID, iif(!isNull(id), id,0)),",
				"          {Final ProductId} = iif(!isNull(ProductID),ProductID, iif(!isNull(value2), value2,0)),",
				"          {Final date} = iif(!isNull(SaleDate), toString(SaleDate, 'yyyy-MM-dd'), \r",
				"    iif(!isNull(date), toString(date, 'yyyy-MM-dd'), 'N/A'))\r",
				",",
				"          {Final Amount} = iif(!isNull(TotalAmount),TotalAmount, iif(!isNull(amount), amount,0))) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          {Final Quantity},",
				"          {Final Customer Id},",
				"          {Final SaleID},",
				"          {Final ProductId},",
				"          {Final date},",
				"          {Final Amount}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}