{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_bronze_products",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_bronze_products",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "ds_bronze_sales",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string,",
				"          StockQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string,",
				"          StockQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          CustomerID as short,",
				"          ProductID as short,",
				"          Quantity as short,",
				"          SaleDate as date,",
				"          SaleID as short,",
				"          TotalAmount as double,",
				"          amount as double,",
				"          category as short,",
				"          date as date,",
				"          id as short,",
				"          value1 as short,",
				"          value2 as short,",
				"          value3 as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source3",
				"derivedColumn1 select(mapColumn(",
				"          Quantity = {Final Quantity},",
				"          Amount = TotalAmount,",
				"          Sales_ID = {Final SaleID},",
				"          ProductId = {Final ProductId},",
				"          Customer_Id = {Final Customer Id},",
				"          date = {Final date}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source3 derive({Final Quantity} = iif(!isNull(category), category, iif(!isNull(value3), value3, Quantity)),",
				"          {Final Customer Id} = iif(!isNull(CustomerID),CustomerID, value1),",
				"          {Final SaleID} = iif(!isNull(SaleID),SaleID, id),",
				"          {Final ProductId} = iif(!isNull(ProductID),ProductID,value2 ),",
				"          {Final date} = iif(!isNull(SaleDate),SaleDate,date ),",
				"          {Final Amount} = iif(!isNull(TotalAmount),TotalAmount,amount)) ~> derivedColumn1"
			]
		}
	}
}