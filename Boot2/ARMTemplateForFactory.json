{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Boot2"
		},
		"ls_Sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_Sqlserver'"
		},
		"ls_std4_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_std4'"
		},
		"ls_Sqlserver_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "akssqlserver.database.windows.net"
		},
		"ls_Sqlserver_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Akssqldb"
		},
		"ls_Sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Akshith-98"
		},
		"ls_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/Akshith-98/boot-Camp-Project_002/refs/heads/main/sales_sample.json"
		},
		"ls_std4_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://std4.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API-activity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_gitapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronze_sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SqlServerdb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "customers-sample"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqlserver",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronze_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "API-activity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SqlServerdb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Products": {},
									"Sales": {},
									"Customers": {},
									"sink2": {},
									"sink1": {},
									"sink3": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_gitapi')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze_sales')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlserver')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze_customers')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer-sample",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "StockQuantity",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gitapi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customers_sample"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_Sqlserver_properties_typeProperties_server')]",
					"database": "[parameters('ls_Sqlserver_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_Sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_Sqlserver_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_std4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_std4_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_std4_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scheduledtrigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2025-03-12T22:47:00",
						"endTime": "2025-03-17T22:47:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling-API')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-03-13T17:51:00Z",
					"endTime": "2025-03-13T21:48:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bronze_products",
								"type": "DatasetReference"
							},
							"name": "Products"
						},
						{
							"dataset": {
								"referenceName": "ds_bronze_sales",
								"type": "DatasetReference"
							},
							"name": "Sales"
						},
						{
							"dataset": {
								"referenceName": "ds_bronze_customers",
								"type": "DatasetReference"
							},
							"name": "Customers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_silver_sales",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_products",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_silver_customers",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "Derived2"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter2"
						},
						{
							"name": "derived1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derived3"
						},
						{
							"name": "filter3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          ProductName as string,",
						"          Category as string,",
						"          Price as integer,",
						"          StockQuantity as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products",
						"source(output(",
						"          CustomerID as integer,",
						"          ProductID as integer,",
						"          Quantity as integer,",
						"          SaleDate as date,",
						"          SaleID as integer,",
						"          TotalAmount as integer,",
						"          amount as integer,",
						"          category as integer,",
						"          date as date,",
						"          id as integer,",
						"          value1 as integer,",
						"          value2 as integer,",
						"          value3 as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> Sales",
						"source(output(",
						"          CustomerID as integer,",
						"          CustomerName as string,",
						"          Email as string,",
						"          Phone as integer,",
						"          City as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Customers",
						"Sales derive({Final Quantity} = iif(!isNull(Quantity), Quantity, \r",
						"    iif(!isNull(value3),value3, \r",
						"        iif(!isNull(category), category, 0)))\r",
						",",
						"          {Final Customer Id} = iif(!isNull(CustomerID),CustomerID, iif(!isNull(value1), value1,0)),",
						"          {Final SaleID} = iif(!isNull(SaleID), SaleID, iif(!isNull(id), id,0)),",
						"          {Final ProductId} = iif(!isNull(ProductID),ProductID, iif(!isNull(value2), value2,0)),",
						"          {Final date} = iif(!isNull(SaleDate), toString(SaleDate, 'yyyy-MM-dd'), \r",
						"    iif(!isNull(date), toString(date, 'yyyy-MM-dd'), 'N/A'))\r",
						",",
						"          {Final Amount} = iif(!isNull(TotalAmount),TotalAmount, iif(!isNull(amount), amount,0))) ~> Derived2",
						"Derived2 select(mapColumn(",
						"          {Final Quantity},",
						"          {Final Customer Id},",
						"          {Final SaleID},",
						"          {Final ProductId},",
						"          {Final date},",
						"          {Final Amount}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 filter(!isNull({Final SaleID}) || !isNull({Final Customer Id}) || !isNull({Final ProductId}) || !isNull({Final date}) || !isNull({Final Quantity}) || !isNull({Final Amount})\r",
						") ~> filter2",
						"Products derive(ProductID = iif(isNull(ProductID), 0, ProductID)\r",
						",",
						"          ProductName = iif(isNull(ProductName), 'N/A', ProductName),",
						"          Category = iif(isNull(Category), 'N/A', Category)\r",
						",",
						"          Price = iif(isNull(Price), 0, Price)\r",
						",",
						"          StockQuantity = iif(isNull(StockQuantity), 'N/A', StockQuantity)) ~> derived1",
						"derived1 filter(!(isNull(ProductID) && isNull(ProductName) && isNull(Category) && isNull(Price) && isNull(StockQuantity))\r",
						") ~> filter1",
						"Customers derive(CustomerID = iif(isNull(CustomerID), 0, CustomerID)\r",
						",",
						"          CustomerName = iif(isNull(CustomerName), 'N/A', CustomerName)\r",
						",",
						"          Email = iif(isNull(Email), 'N/A', Email)\r",
						",",
						"          Phone = iif(isNull(Phone), 0, Phone)\r",
						",",
						"          City = iif(isNull(City), 'N/A', City)\r",
						",",
						"          Country = iif(isNull(Country), 'N/A',Country)\r",
						") ~> derived3",
						"derived3 filter(!(isNull(CustomerID) && isNull(CustomerName) && isNull(Email) && isNull(Phone) && isNull(City) && isNull(Country))\r",
						") ~> filter3",
						"filter2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"filter3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bronze_products')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze_sales')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze_customers')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_sales')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_products')]",
				"[concat(variables('factoryId'), '/datasets/ds_silver_customers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales_sample",
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales",
						"fileSystem": "silver"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products_sample.csv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "StockQuantity",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_std4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_std4')]"
			]
		}
	]
}